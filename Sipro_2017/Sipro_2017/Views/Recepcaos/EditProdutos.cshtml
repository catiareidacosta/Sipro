@model Sipro_2017.produto_new

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>produto_new</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            <div class="col-md-10">
                @Html.Label("SSCC")
                @Html.EditorFor(model => model.codcomercial, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.codcomercial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.Label("Nrº guia ")
                @Html.EditorFor(model => model.numero_guia, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.numero_guia, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.Label("Descrição Produto")
                @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.Label("Nr Unidades")
                @Html.EditorFor(model => model.NrUnidades, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NrUnidades, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.Label("Lote ")
                @Html.EditorFor(model => model.lote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lote, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.Label("Validade ")
                @Html.EditorFor(model => model.validade, "{0:yyyy/MM/dd}", new { htmlAttributes = new { @class = "form-control", @id= "valid", @onblur= "checkDt(this)" } })
                @Html.ValidationMessageFor(model => model.validade, "", new { @class = "text-danger" })
            </div>
        </div>
        <script language="javascript">
    function checkDt(fld) {
        var mo, day, yr;
        var entry = fld.value;
        if (entry != "" && entry != null) {
            var reLong = /\b\d{1,2}[\/-]\d{1,2}[\/-]\d{4}\b/;
            var reShort = /\b\d{1,2}[\/-]\d{1,2}[\/-]\d{2}\b/;
            var valid = (reLong.test(entry)) || (reShort.test(entry));
            if (valid) {
                var delimChar = (entry.indexOf("/") != -1) ? "/" : "-";
                var delim1 = entry.indexOf(delimChar);
                var delim2 = entry.lastIndexOf(delimChar);
                day = parseInt(entry.substring(0, delim1), 10);
                mo = parseInt(entry.substring(delim1 + 1, delim2), 10);
                yr = parseInt(entry.substring(delim2 + 1), 10);
                // handle two-digit year
                if (yr < 100) {
                    var today = new Date();
                    var currCent = parseInt(today.getFullYear() / 100) * 100;
                    var threshold = (today.getFullYear() + 15) - currCent;
                    if (yr > threshold) { yr += currCent - 100; } else { yr += currCent; }
                }
                fld.value = yr + "/" + mo + "/" + day;
                appendTitle();
                return true;
            } else { alert("Formato inválido. Usar yyyy/mm/dd."); }
            return false;
        }
        else {
            appendTitle();
            return true;
        }
    }
        </script>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
